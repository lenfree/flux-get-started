---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: equerry
  namespace: flux
  labels:
    language: elixir
spec:
  selector:
    matchLabels:
      app: equerry
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: equerry
    spec:
      serviceAccountName: equerry-list-pods
      containers:
      - name: equerry
        image: lenfree/equerry:0.0.1
        ports:
        - containerPort: 5000
        # This signal K8 controller that the container is broken and requires the scheduler to heal it by restarting it.
        livenessProbe:
          httpGet:
            path: /api/status
            port: 5000
          # Number of seconds after the container has started before liveness or readiness probes are initiated. Defaults to 0 seconds. Minimum value is 0.
          # Until I fix the startup compilation time
          initialDelaySeconds: 60
          periodSeconds: 10
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /api/status
            port: 5000
          initialDelaySeconds: 60
          periodSeconds: 3
        env:
        - name: SECRET_KEY_BASE
          # This shoud not be in Git but since this is just for a spike, I can
          # live with this
          value: eglQNvZ2QqLT0dHnkTpErVrNvAJvGz73XwPqbuGxWNEU0GBLJP4p6z1MED+MWOlv
        - name: NEW_RELIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: api-key
              key: NEW_RELIC_API_KEY
        resources:
          requests:
            cpu: "500m"
            memory: "500Mi"
          limits:
            cpu: "500m"
            memory: "500Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: equerry
  namespace: flux
  labels:
    name: equerry
spec:
  ports:
  - port: 80
    targetPort: 5000
    protocol: TCP
  selector:
    app: equerry
  type: ClusterIP
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: equerry-list-pods
  namespace: flux
rules:
- apiGroups: ["apps"]
  resources: ["pods", "replicationcontrollers", "services", "nodes", "configmaps",
    "deployments", "namespaces", "daemonsets", "replicasets"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: equerry-list-pods
  namespace: flux
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: equerry-list-pods
subjects:
- kind: ServiceAccount
  name: equerry-list-pods
  namespace: flux
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: equerry-list-pods
  namespace: flux

